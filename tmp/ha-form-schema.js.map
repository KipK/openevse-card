{"version":3,"file":"ha-form-schema.js","sourceRoot":"","sources":["../src/ha-form-schema.ts"],"names":[],"mappings":"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","sourcesContent":["import memoizeOne from \"memoize-one\";\r\nimport { SchemaItem } from \"./types\";\r\n\r\nexport const mainSchema = memoizeOne(\r\n\t(deviceEntities: Record<string, string[]> = {}): SchemaItem[] => {\r\n\t\t// Base schema\r\n\t\tconst schema: SchemaItem[] = [\r\n\t\t\t{\r\n\t\t\t\ttype: \"grid\",\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tschema: [\r\n\t\t\t\t\t{ name: \"name\", selector: { text: {} }, required: false, label: \"Header Title\" },\r\n\t\t\t\t\t{ name: \"header\", selector: { boolean: {} }, label: \"Display header\" }\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"device_id\",\r\n\t\t\t\tselector: { device: { integration: \"openevse\", manufacturer: \"OpenEVSE\" } },\r\n\t\t\t\tlabel: \"OpenEVSE Device\",\r\n\t\t\t\thelper_text: \"Select your OpenEVSE device to automatically populate all entities\",\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\t// Add entity selectors with filtering\r\n\t\t// We use the device entity lists that were passed in\r\n\t\tconst entitySelectors: SchemaItem[] = [\r\n\t\t\t{\r\n\t\t\t\tname: \"override_entity\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tentity: {\r\n\t\t\t\t\t\tdomain: [\"input_select\", \"select\"],\r\n\t\t\t\t\t\tinclude_entities: deviceEntities.select || []\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabel: \"Override State\",\r\n\t\t\t\thelper_text: \"Select openevse.override_state entity\",\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"status_entity\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tentity: {\r\n\t\t\t\t\t\tdomain: [\"sensor\"],\r\n\t\t\t\t\t\tinclude_entities: deviceEntities.sensor || []\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabel: \"Station Status\",\r\n\t\t\t\thelper_text: \"Select openevse.station_status entity\",\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"power_entity\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tentity: {\r\n\t\t\t\t\t\tdomain: [\"sensor\"],\r\n\t\t\t\t\t\tinclude_entities: deviceEntities.sensor || []\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabel: \"Current power usage\",\r\n\t\t\t\thelper_text: \"Select openevse.current_power_usage entity\",\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"current_entity\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tentity: {\r\n\t\t\t\t\t\tdomain: [\"sensor\"],\r\n\t\t\t\t\t\tinclude_entities: deviceEntities.sensor || []\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabel: \"Charging current\",\r\n\t\t\t\thelper_text: \"Select openevse.charging_current entity\",\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"vehicle_connected_entity\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tentity: {\r\n\t\t\t\t\t\tdomain: [\"binary_sensor\"],\r\n\t\t\t\t\t\tinclude_entities: deviceEntities.binary_sensor || []\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabel: \"Vehicle Connected\",\r\n\t\t\t\thelper_text: \"Select openevse.vehicle_connected entity\",\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"charging_status_entity\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tentity: {\r\n\t\t\t\t\t\tdomain: [\"sensor\"],\r\n\t\t\t\t\t\tinclude_entities: deviceEntities.sensor || []\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabel: \"Charging status\",\r\n\t\t\t\thelper_text: \"Select openevse.charging_status entity\",\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"charge_rate_entity\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tentity: {\r\n\t\t\t\t\t\tdomain: [\"number\"],\r\n\t\t\t\t\t\tinclude_entities: deviceEntities.number || []\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabel: \"Charge Rate\",\r\n\t\t\t\thelper_text: \"Select openevse.charge_rate entity\",\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"session_energy_entity\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tentity: {\r\n\t\t\t\t\t\tdomain: [\"sensor\"],\r\n\t\t\t\t\t\tinclude_entities: deviceEntities.sensor || []\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabel: \"Session Energy\",\r\n\t\t\t\thelper_text: \"Select openevse.usage_this_session entity\",\r\n\t\t\t\trequired: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"time_elapsed_entity\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tentity: {\r\n\t\t\t\t\t\tdomain: [\"sensor\"],\r\n\t\t\t\t\t\tinclude_entities: deviceEntities.sensor || []\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabel: \"Charge Time Elapsed\",\r\n\t\t\t\thelper_text: \"Select openevse.charge_time_elapsed entity\",\r\n\t\t\t\trequired: true\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\treturn [...schema, ...entitySelectors];\r\n\t}\r\n);\r\n\r\nexport const optionalEntitySchema = memoizeOne(\r\n\t(allEntities: string[] = []): SchemaItem[] => [\r\n\t\t{\r\n\t\t\tname: \"id\",\r\n\t\t\tselector: {\r\n\t\t\t\tentity: {\r\n\t\t\t\t\tdomain: [\"sensor\", \"binary_sensor\"],\r\n\t\t\t\t\tinclude_entities: allEntities\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlabel: \"Entity\"\r\n\t\t},\r\n\t\t{ name: \"name\", selector: { text: {} }, label: \"Name\" },\r\n\t\t{ name: \"icon\", selector: { icon: {} }, label: \"Icon\" }\r\n\t]\r\n);\r\n"]}