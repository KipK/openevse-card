{"version":3,"file":"custom-card.js","sourceRoot":"","sources":["../src/custom-card.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, PropertyValues } from 'lit-element';\r\nimport { HomeAssistant, CardConfig, OptionalEntity, TranslationDict, CustomDetailEvent } from './types';\r\nimport { cardStyles } from './styles';\r\nimport translations from './translations';\r\nimport './evse-slider/evse-slider';\r\n\r\nclass CustomCard extends LitElement {\r\n    static override get properties() {\r\n        return {\r\n            hass: { type: Object },\r\n            config: { type: Object },\r\n            _lang: { type: String },\r\n            _localTimeElapsed: { type: Number },\r\n            _lastEntityTime: { type: Number },\r\n            _timeUpdateInterval: { type: Number },\r\n            _isCharging: { type: Boolean }\r\n        };\r\n    }\r\n\r\n    hass?: HomeAssistant;\r\n    config?: CardConfig;\r\n    _lang?: string;\r\n    _localTimeElapsed: number = 0;\r\n    _lastEntityTime: number = 0;\r\n    _timeUpdateInterval: number | null = null;\r\n    _isCharging: boolean = false;\r\n    _translations: TranslationDict = translations;\r\n\r\n    constructor() {\r\n        super();\r\n        this._translations = translations;\r\n        this._localTimeElapsed = 0;\r\n        this._lastEntityTime = 0;\r\n        this._timeUpdateInterval = null;\r\n        this._isCharging = false;\r\n    }\r\n\r\n    override disconnectedCallback(): void {\r\n        super.disconnectedCallback();\r\n        if (this._timeUpdateInterval) {\r\n            clearInterval(this._timeUpdateInterval);\r\n            this._timeUpdateInterval = null;\r\n        }\r\n    }\r\n\r\n    public getGridOptions() {\r\n        return {\r\n            columns: 12,\r\n            max_columns: 12,\r\n            min_columns: 9\r\n        };\r\n    }\r\n\r\n    _setupTimeInterval(): void {\r\n        // Clear any existing interval\r\n        if (this._timeUpdateInterval) {\r\n            clearInterval(this._timeUpdateInterval);\r\n            this._timeUpdateInterval = null;\r\n        }\r\n\r\n        // Only set up interval if charging\r\n        if (this._isCharging) {\r\n            // Set up new interval that runs every second\r\n            this._timeUpdateInterval = window.setInterval(() => {\r\n                // Increment local time by 1 second in minutes (1/60)\r\n                this._localTimeElapsed += (1 / 60);\r\n                this.requestUpdate();\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    override firstUpdated(): void {\r\n        this._lang = this.hass?.language || \"en\";\r\n    }\r\n\r\n    override updated(changedProperties: PropertyValues): void {\r\n        if (changedProperties.has(\"hass\") && this.hass) {\r\n            this._lang = this.hass.language || \"en\";\r\n\r\n            // Check if charging status has changed\r\n            if (this.config && this.config.charging_status_entity &&\r\n                this.hass.states[this.config.charging_status_entity]) {\r\n\r\n                const chargingEntity = this.hass.states[this.config.charging_status_entity];\r\n                const isNowCharging = chargingEntity.state === \"charging\";\r\n\r\n                // If charging status changed\r\n                if (isNowCharging !== this._isCharging) {\r\n                    this._isCharging = isNowCharging;\r\n\r\n                    // Update interval based on new status\r\n                    this._setupTimeInterval();\r\n                }\r\n            }\r\n\r\n            // Check if time_elapsed_entity exists and has changed\r\n            if (this.config && this.config.time_elapsed_entity &&\r\n                this.hass.states[this.config.time_elapsed_entity]) {\r\n\r\n                const timeEntity = this.hass.states[this.config.time_elapsed_entity];\r\n                const newTime = parseFloat(timeEntity.state);\r\n\r\n                // If the entity time has changed, update our local time\r\n                if (!isNaN(newTime) && newTime !== this._lastEntityTime) {\r\n                    this._lastEntityTime = newTime;\r\n                    this._localTimeElapsed = newTime;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Handle first load setup\r\n        if (changedProperties.has(\"config\") && !changedProperties.has(\"hass\") &&\r\n            this.config && this.hass) {\r\n\r\n            // Check charging status on first load\r\n            if (this.config.charging_status_entity &&\r\n                this.hass.states[this.config.charging_status_entity]) {\r\n\r\n                const chargingEntity = this.hass.states[this.config.charging_status_entity];\r\n                this._isCharging = chargingEntity.state === \"charging\";\r\n            }\r\n\r\n            // Initialize time elapsed\r\n            if (this.config.time_elapsed_entity &&\r\n                this.hass.states[this.config.time_elapsed_entity]) {\r\n\r\n                const timeEntity = this.hass.states[this.config.time_elapsed_entity];\r\n                if (timeEntity) {\r\n                    this._lastEntityTime = parseFloat(timeEntity.state);\r\n                    this._localTimeElapsed = this._lastEntityTime;\r\n\r\n                    // Set up timer if charging\r\n                    if (this._isCharging) {\r\n                        this._setupTimeInterval();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Card configuration options\r\n    static getConfigElement(): HTMLElement {\r\n        return document.createElement('openevse-card-editor');\r\n    }\r\n\r\n    static getStubConfig(): CardConfig {\r\n        return {\r\n            header: true,\r\n            name: 'OpenEVSE',\r\n            device_id: '',\r\n            override_entity: '',\r\n            status_entity: '',\r\n            power_entity: '',\r\n            current_entity: '',\r\n            charge_rate_entity: '',\r\n            vehicle_connected_entity: '',\r\n            charging_status_entity: '',\r\n            session_energy_entity: '',\r\n            time_elapsed_entity: '',\r\n            optional_entities: [],\r\n        };\r\n    }\r\n\r\n    // Card styling\r\n    static override get styles() {\r\n        return cardStyles;\r\n    }\r\n\r\n    // Validate configuration\r\n    setConfig(config: CardConfig): void {\r\n        this.config = config;\r\n    }\r\n\r\n    // Card size\r\n    getCardSize(): number {\r\n        return 3;\r\n    }\r\n\r\n    // Call service for the buttons\r\n    _callService(entity_id: string, option: string | number): void {\r\n        if (this.hass) {\r\n            this.hass.callService('select', 'select_option', {\r\n                entity_id: entity_id,\r\n                option: option.toString(),\r\n            });\r\n        }\r\n    }\r\n\r\n    // Show entity more-info dialog\r\n    _showMoreInfo(entity_id: string): void {\r\n        const event = new Event('hass-more-info', {\r\n            bubbles: true,\r\n            composed: true,\r\n        }) as CustomDetailEvent;\r\n\r\n        event.detail = { entityId: entity_id };\r\n        this.dispatchEvent(event);\r\n    }\r\n\r\n    _convertSeconds(sec: number): string {\r\n        if (isNaN(sec) || sec < 0) {\r\n            return \"00:00:00\";\r\n        }\r\n\r\n        const hours = Math.floor(sec / 3600);\r\n        const minutes = Math.floor((sec % 3600) / 60);\r\n        const seconds = Math.floor(sec % 60);\r\n\r\n        return [hours, minutes, seconds]\r\n            .map(unit => String(unit).padStart(2, '0'))\r\n            .join(':');\r\n    }\r\n\r\n    _convertTime(t: number): string {\r\n        if (isNaN(t) || t < 0) {\r\n            return \"00:00:00\";\r\n        }\r\n        const totalSeconds = Math.round(t * 60);\r\n        return this._convertSeconds(totalSeconds);\r\n    }\r\n\r\n    _t(key: string): string {\r\n        const lang = this._lang || \"en\";\r\n        return this._translations[lang]?.[key] ||\r\n            this._translations[\"en\"]?.[key] ||\r\n            key;\r\n    }\r\n\r\n    _updateSlider(e: CustomEvent) {\r\n        if (this.hass && this.config?.charge_rate_entity) {\r\n            this.hass.callService('number', 'set_value', {\r\n                entity_id: this.config.charge_rate_entity,\r\n                value: e.detail.value\r\n            })\r\n        }\r\n    }\r\n\r\n    // Render the card\r\n    override render() {\r\n        if (!this.hass || !this.config) {\r\n            return html``;\r\n        }\r\n\r\n        // Get entities from hass states\r\n        const overrideEntity = this.config.override_entity ? this.hass.states[this.config.override_entity] : null;\r\n        const statusEntity = this.config.status_entity ? this.hass.states[this.config.status_entity] : null;\r\n        const powerEntity = this.config.power_entity\r\n            ? this.hass.states[this.config.power_entity]\r\n            : null;\r\n        const currentEntity = this.config.current_entity\r\n            ? this.hass.states[this.config.current_entity]\r\n            : null;\r\n        const chargeRateEntity =\r\n            this.config.charge_rate_entity ? this.hass.states[this.config.charge_rate_entity] : null;\r\n        const vehicleConnectedEntity =\r\n            this.config.vehicle_connected_entity ? this.hass.states[this.config.vehicle_connected_entity] : null;\r\n        const chargingStatusEntity =\r\n            this.config.charging_status_entity ? this.hass.states[this.config.charging_status_entity] : null;\r\n        const sessionEnergyEntity =\r\n            this.config.session_energy_entity ? this.hass.states[this.config.session_energy_entity] : null;\r\n        const timeElapsedEntity =\r\n            this.config.time_elapsed_entity ? this.hass.states[this.config.time_elapsed_entity] : null;\r\n\r\n        const getOptionalEntities = (): OptionalEntity[] =>\r\n            this.config?.optional_entities?.map((entity) => {\r\n                return {\r\n                    name: entity.name as string | null\r\n                        ? entity.name as string | null\r\n                        : entity.id ? this.hass?.states[entity.id]?.attributes.friendly_name as string | null : null,\r\n                    value: entity.id ? this.hass?.formatEntityState(\r\n                        this.hass.states[entity.id]\r\n                    ) ?? null : null,\r\n                    icon: entity.icon,\r\n                    id: entity.id ? entity.id : undefined,\r\n                };\r\n            }) ?? [];\r\n\r\n        const optionalEntities = getOptionalEntities();\r\n\r\n        return html`\r\n      <ha-card>\r\n      ${this.config.header\r\n                ? html`<h1 class=\"card-header\">\r\n            ${this.config.name || 'OpenEVSE'}\r\n            </h1>`\r\n                : ''}\r\n      <div class=\"card-content\">\r\n          <div class=\"evse-states\">\r\n          <div class=\"status-icons\">\r\n              <div\r\n              class=\"status-icon clickable\"\r\n              @click=${() =>\r\n                this._showMoreInfo(\r\n                    this.config?.status_entity || ''\r\n                )}\r\n              >\r\n              <ha-icon\r\n                  icon=\"${statusEntity?.state == 'active'\r\n                ? 'mdi:lightning-bolt'\r\n                : 'mdi:cancel'}\"\r\n                  class=\"${statusEntity?.state == 'active'\r\n                ? chargingStatusEntity?.state == 'charging'\r\n                    ? 'charging'\r\n                    : 'active'\r\n                : 'disabled'}\"\r\n              ></ha-icon>\r\n              </div>\r\n              <div\r\n              class=\"status-icon clickable\"\r\n              @click=${() =>\r\n                this._showMoreInfo(\r\n                    this.config?.vehicle_connected_entity || ''\r\n                )}\r\n              >\r\n              <ha-icon\r\n                  icon=\"${vehicleConnectedEntity?.state ==\r\n                'off'\r\n                ? 'mdi:car-off'\r\n                : 'mdi:car'}\"\r\n                  class=\"${vehicleConnectedEntity?.state ==\r\n                'off'\r\n                ? 'disabled'\r\n                : 'active'}\"\r\n              ></ha-icon>\r\n              </div>\r\n          </div>\r\n          <div class=\"status-heading\">\r\n              <div\r\n                  class=\"status-badge ${chargingStatusEntity?.state ==\r\n                'error'\r\n                ? 'badge-error'\r\n                : statusEntity?.state == 'disabled'\r\n                    ? 'badge-disabled'\r\n                    : chargingStatusEntity?.state == 'charging'\r\n                        ? 'badge-charging'\r\n                        : 'badge-active'}\"\r\n              >\r\n               ${this._t(chargingStatusEntity?.state || '')}\r\n              </div>\r\n          </div>\r\n          </div>\r\n          <div class=\"grid-container\">\r\n          ${powerEntity\r\n                ? html`\r\n                <div class=\"grid-item\">\r\n                    <div class=\"grid-item-label\">${this._t(\"power\")}</div>\r\n                    <div\r\n                    class=\"grid-item-value current-value clickable\"\r\n                    @click=${() =>\r\n                        this._showMoreInfo(\r\n                            this.config?.power_entity || ''\r\n                        )}\r\n                    >\r\n                    ${powerEntity ? this.hass.formatEntityState(\r\n                            powerEntity\r\n                        ) : \"0 W\"}\r\n                    </div>\r\n                </div>\r\n                `\r\n                : html`\r\n                <div class=\"grid-item\">\r\n                    <div class=\"grid-item-label\">${this._t(\"power\")}</div>\r\n                    <div class=\"grid-item-value current-value\">0 W</div>\r\n                </div>`\r\n            }\r\n          ${currentEntity\r\n                ? html`\r\n                <div class=\"grid-item\">\r\n                    <div class=\"grid-item-label\">${this._t(\"current\")}</div>\r\n                    <div\r\n                    class=\"grid-item-value current-value clickable\"\r\n                    @click=${() =>\r\n                        this._showMoreInfo(\r\n                            this.config?.current_entity || ''\r\n                        )}\r\n                    >\r\n                    ${currentEntity ? this.hass.formatEntityState(\r\n                            currentEntity\r\n                        ) : \"0 A\"}\r\n                    </div>\r\n                </div>\r\n                `\r\n                : html`\r\n                <div class=\"grid-item\">\r\n                    <div class=\"grid-item-label\">${this._t(\"current\")}</div>\r\n                    <div class=\"grid-item-value current-value\">0 A</div>\r\n                </div>`\r\n            }\r\n          ${sessionEnergyEntity\r\n                ? html`\r\n                <div class=\"grid-item\">\r\n                    <div class=\"grid-item-label\">${this._t(\"session\")}</div>\r\n                    <div\r\n                    class=\"grid-item-value current-value clickable\"\r\n                    @click=${() =>\r\n                        this._showMoreInfo(\r\n                            this.config?.session_energy_entity || ''\r\n                        )}\r\n                    >\r\n                    ${sessionEnergyEntity ? this.hass.formatEntityState(\r\n                            sessionEnergyEntity\r\n                        ) : \"0 kWh\"}\r\n                    </div>\r\n                </div>\r\n                `\r\n                : html`\r\n                <div class=\"grid-item\">\r\n                    <div class=\"grid-item-label\">${this._t(\"session\")}</div>\r\n                    <div class=\"grid-item-value current-value\">0 kWh</div>\r\n                </div>`\r\n            }\r\n\r\n          ${timeElapsedEntity\r\n                ? html`\r\n          <div class=\"grid-item\">\r\n              <div class=\"grid-item-label\">${this._t(\"elapsed\")}</div>\r\n              <div\r\n              class=\"grid-item-value current-value\"\r\n              >\r\n              ${this._convertTime(this._localTimeElapsed || 0)}\r\n              </div>\r\n          </div>\r\n          `: html`\r\n                <div class=\"grid-item\">\r\n                    <div class=\"grid-item-label\">${this._t(\"elapsed\")}</div>\r\n                    <div class=\"grid-item-value current-value\">00:00:00</div>\r\n                </div>`\r\n            }\r\n          </div>\r\n          <div class=\"override-controls\">\r\n          <div class=\"override-row\">\r\n              <div\r\n              class=\"override-button ${overrideEntity?.state ==\r\n                'active'\r\n                ? 'active'\r\n                : ''}\"\r\n              data-option=\"active\"\r\n              @click=${() =>\r\n                this._callService(\r\n                    this.config?.override_entity || '',\r\n                    'active'\r\n                )}\r\n              >\r\n              <ha-icon\r\n                  icon=\"mdi:lightning-bolt\"\r\n                  class=\"${overrideEntity?.state == 'active' &&\r\n                chargingStatusEntity?.state == 'charging'\r\n                ? 'charging'\r\n                : ''}\"\r\n              ></ha-icon>\r\n              </div>\r\n              <div\r\n              class=\"override-button ${overrideEntity?.state ==\r\n                'auto'\r\n                ? 'active'\r\n                : ''}\"\r\n              data-option=\"auto\"\r\n              @click=${() =>\r\n                this._callService(\r\n                    this.config?.override_entity || '',\r\n                    'auto'\r\n                )}\r\n              >\r\n              <ha-icon\r\n                  icon=\"mdi:robot\"\r\n                  class=\"${overrideEntity?.state == 'auto' &&\r\n                chargingStatusEntity?.state == 'charging'\r\n                ? 'charging'\r\n                : ''}\"\r\n              ></ha-icon>\r\n              </div>\r\n              <div\r\n              class=\"override-button ${overrideEntity?.state ==\r\n                'disabled'\r\n                ? 'active'\r\n                : ''}\"\r\n              data-option=\"disabled\"\r\n              @click=${() =>\r\n                this._callService(\r\n                    this.config?.override_entity || '',\r\n                    'disabled'\r\n                )}\r\n              >\r\n              <ha-icon icon=\"mdi:cancel\"></ha-icon>\r\n              </div>\r\n          </div>\r\n          </div>\r\n          \r\n            <evse-slider\r\n                .min=${typeof chargeRateEntity?.attributes.min === 'number' ? chargeRateEntity.attributes.min : 0}\r\n                .max=${typeof chargeRateEntity?.attributes.max === 'number' ? chargeRateEntity.attributes.max : 32}\r\n                .step=${typeof chargeRateEntity?.attributes.step === 'number' ? chargeRateEntity.attributes.step : 1}\r\n                .value=${Number(chargeRateEntity?.state || 0)}\r\n                .unit=${typeof chargeRateEntity?.attributes.unit_of_measurement === 'string' ? chargeRateEntity.attributes.unit_of_measurement : 'A'}\r\n                .label=${this._t(\"charge rate\")}\r\n                .disabled=${!chargeRateEntity}\r\n                @value-changed=${this._updateSlider}\r\n            ></evse-slider>\r\n          ${optionalEntities?.map(\r\n                (entity) => html`\r\n              <div class=\"other-entities-container\">\r\n              <div class=\"entity-row\">\r\n                  <div class=\"entity-title\">\r\n                  ${entity.icon != null\r\n                        ? html`\r\n                        <div class=\"entity-icon\">\r\n                            <ha-icon\r\n                            icon=${entity.icon}\r\n                            ></ha-icon>\r\n                        </div>\r\n                        `\r\n                        : html`\r\n                        <div\r\n                            class=\"entity-icon\"\r\n                        ></div>\r\n                        `}\r\n\r\n                  <div class=\"entity-label\">\r\n                      ${entity.name ? entity.name : entity.id ? entity.id : \"\"}\r\n                  </div>\r\n                  </div>\r\n                  <div\r\n                  class=\"entity-value clickable\"\r\n                  @click=${() =>\r\n                        this._showMoreInfo(entity.id ? entity.id : \"\")}\r\n                  >\r\n                  ${entity.value ? entity.value : \"\"}\r\n                  </div>\r\n              </div>\r\n              </div>\r\n          `\r\n            )}\r\n      </div>\r\n      </ha-card>\r\n    `;\r\n    }\r\n}\r\n\r\nexport { CustomCard };\r\n"]}